<?xml version="1.0"?>

<!--

author: Christoph Gollok
email: christoph.gollok@alumni.fh-aachen.de

-->

<launch>

  <!--<arg name="namespace" default="ackermann"/> -->
  <!-- <arg name="world_name" default="$(find rover_gazebo)/worlds/mc_ROS_SS15.world"/> -->
   <arg name="world_name" default="$(find rover_gazebo)/worlds/test_7.world"/> -->


  <arg name="cmd_timeout" default="0.5"/>



  <!-- Vehicle pose -->
   <arg name="x" default="1.8"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.6"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="1.5675"/>


    <!-- robot_description is used by nodes that publish to joint_states. -->
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder $(find rover_description)/urdf/em_rover.urdf.xacro"/>

    <!-- Read joint positions from joint_states, then publish the vehicle's
         state to tf. -->
    <node name="vehicle_state_publisher" pkg="robot_state_publisher"
          type="robot_state_publisher">
      <param name="publish_frequency" value="30.0"/>
    </node>


    <!-- Create the world. -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <!-- <param name= "debug" value="true" /> -->
      <arg name="world_name" value="$(arg world_name)"/>
    </include>

    <!-- Spawn the vehicle. -->
    <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model RoverROS_SS15
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>



    <!-- Load the joint controllers. One of these publishes the joint states
         to joint_states. -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="$(find ackermann_vehicle_gazebo)/config/em_3905_joint_ctrlr_params.yaml"/>

    <!-- Control the steering, axle, and shock absorber joints. -->
    <node name="ackermann_controller" pkg="ackermann_vehicle_gazebo"
          type="ackermann_controller.py">
      <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
      <rosparam file="$(find ackermann_vehicle_gazebo)/config/em_3905_ackermann_ctrlr_params.yaml" command="load"/>
    </node>










 <!--node name="fake_odom" pkg="maskor_gazebo" type="fake_odom"/-->

<!-- RVIZ Stuff -->

 <!-- Read joint positions from a GUI, then publish them to joint_states. -->
  <node name="joint_state_publisher" pkg="joint_state_publisher"
        type="joint_state_publisher">
    <param name="rate" value="30"/>
    <param name="use_gui" value="false"/>
  </node>

<!-- cmd_vel to ackermann_cmd converter -->
<!-- define parameters for ACKERMANN STEERING -->

<node pkg="rover_gazebo" type="ackermann_cmd_wrapper" name="ackermann_cmd_wrapper" output="screen"/>
<param name="steering_angle" value="33.8"/> <!-- deg/s -->
<param name="steering_velocity" value="180.0"/>  <!-- deg/s -->
<param name="max_speed" value="1.5"/> <!-- m/s -->
<param name="acceleration" value="8"/> <!-- m/sÂ² -->
<param name="invert_steering" value="1"/><!-- invert LeftRight -->



</launch>
